# guard against multiple inclusions
$ifndef "mental_ray_fire_shader_included"
set "mental_ray_fire_shader_included" "true"

# Voxel density shader, reads voxelized data from a given file

declare shader
	scalar "voxel_density" (
		string "filename",
		integer "read_mode",
			#:default 1
			#: min 0 max 2
		vector "min_point", 
			#: default -1 -1 -1
		vector "max_point", 
			#: default 1 1 1
		color "color", 
			#: default 1 1 1 
			)
	version 1
end declare

# Volumetric fire renderer

declare shader
		struct { 
			color "color",
			color "glowColor",
			color "matteOpacity",
			color "transparency"
		} "fire_volume_shader" (
			color "color", 
				#: default 0.9 0.2 0
			color "glowColor",
				#: default 0 0 0
			color "matteOpacity",
				#: default 1 1 1
			color "transparency",
				#: default 0.5 0.5 0.5
			shader "density_shader",
			scalar "unit_density", 
				#: default 1e1
			scalar "shadow_density", 
				#: default 12
			scalar "march_increment", 
				#: default 0.05 
				)
	apply volume
	version 1
end declare


# Volumetric fire light

declare shader
	color "fire_volume_light" (
		shader "temperature_shader",
		scalar "unit_temperature", 
			#: default 1e1
		scalar "march_increment", 
			#: default 0.05
	)
	version 1
	apply light
end declare

$endif # if not "mental_ray_fire_shader_included"